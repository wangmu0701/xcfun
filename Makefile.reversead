# Compile time options:
# -DNDEBUG Turn off run time checks in production calculations to gain speed
# To compile without -lstdc++ needed use (g++) -fno-rtti -fno-exceptions
# -fno-threadsafe-statics. Note the last option.

# C++ compiler and flags
CXX=g++
CC=g++
CFLAGS=-g -Wall -O3 -DXCFUN_REVERSEAD -std=c++11 -I$(HOME)/reversead/include -fpermissive # -ffast-math  -DNDEBUG
CXXFLAGS=$(CFLAGS) #-fno-rtti -fno-exceptions

LIBS=-L$(HOME)/reversead/lib -lreversead

# Fortran compiler and flags (used in fortran/kernel_example.F90)
FC=gfortran
FFLAGS=-Wall -Llib -Jfortran

#This file probably requires GNU Make, but should be easily
#convertible to regular Make format.

PATHS:=-Iinclude -Isrc -Isrc/taylor -Isrc/functionals 
CFLAGS+=$(PATHS)
LIBS+=-Llib

BASE_OBJ:=src/xcint.o src/xcfun.o src/fortran.o
FUN_OBJ:= $(patsubst %.cpp,%.o,$(wildcard src/functionals/*.cpp))

lib: lib/libxcfun.a

lib/libxcfun.a: $(BASE_OBJ) $(FUN_OBJ)
	ar -r $@ $(FUN_OBJ) $(BASE_OBJ)

genfortran: src/genfortran.cpp lib/libxcfun.a
	$(CXX) $(CXXFLAGS) $^ -o $@ -lxcfun -lm $(LIBS)

testall: test/testall.c lib/libxcfun.a
	$(CXX) $(CFLAGS) $< -o $@ -lxcfun -lm $(LIBS)

reversead: test/reversead.cpp lib/libxcfun.a
	$(CXX) $(CXXFLAGS) $< -o $@ -lxcfun -lm $(LIBS)

revtest: test/revtest.cpp lib/libxcfun.a
	$(CXX) $(CXXFLAGS) $< -o $@ -lxcfun -lm $(LIBS)

example: test/example.c lib/libxcfun.a
	$(CXX) $(CFLAGS) $< -o $@ -lxcfun -lm $(LIBS)

funeval: test/funeval.c lib/libxcfun.a
	$(CC) $(CFLAGS) $< -o $@ -lxcfun -lm $(LIBS)

brtest: test/brtest.c lib/libxcfun.a
	$(CC) $(CFLAGS) $< -o $@ -lxcfun -lm $(LIBS)

numdiff: test/numdiff.c lib/libxcfun.a
	$(CC) $(CFLAGS) $< -o $@ -lxcfun -lm $(LIBS)

fortran/xcfun_module.o: fortran/xcfun_module.F90
	$(FC) $(FFLAGS) -c -o $@ $<

kernel_example: fortran/xcfun_module.o  lib/libxcfun.a fortran/kernel_example.o
	$(FC) $(FFLAGS) $(LIBS) -o $@ $^ -lxcfun -lm

clean:
	rm -f `find . -name '*.o' -o -name '*~'` testall funeval lib/libxcfun.a fortran/xcfun_autogen.F90 example_fortran_ 

.SUFFIXES: .f90 .F90

.f90.o:
	$(FC) $(FFLAGS) -c -o $*.o $*.f90


.F90.o:
	$(FC) $(FFLAGS) -c -o $*.o $*.F90
